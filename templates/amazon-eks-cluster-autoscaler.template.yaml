AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Deploys the auto-scaler helm chart into an existing kubernetes cluster
  (qs-1ql475ceo).
Metadata:
  cfn-lint: { config: { ignore_checks: [W9002, W9003, W9004, W9006, W7001] } }
Parameters:
  EksClusterName:
    Type: String
  KubernetesVersion:
    Type: String
    AllowedValues: [1.24, 1.23, 1.22]
    Default: 1.24
  OIDCProviderArn:
    Type: String
  OIDCProviderEndpoint:
    Type: String
  PrometheusEnabled:
    Type: String
    AllowedValues: ['true', 'false']
  PrometheusNamespace:
    Type: String
Conditions:
  NeedsStaticList: !Or
  # Workaround for https://github.com/kubernetes/autoscaler/issues/3372
    - !Equals [!Ref AWS::Region, cn-north-1]
    - !Equals [!Ref AWS::Region, cn-northwest-1]
Mappings:
  KubernetesVersion:
  # NOTE: The cluster autoscaler version number is dependant on the K8S version
  # it is being deployed into.
  # https://github.com/kubernetes/autoscaler/releases
    '1.22':
      ImageTag: v1.22.3
    '1.23':
      ImageTag: v1.23.1
    '1.24':
      ImageTag: v1.24.0
Resources:
  ClusterAutoScalerIamRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: !Sub |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Federated": "${OIDCProviderArn}"
              },
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": {
                "StringEquals": {
                  "${OIDCProviderEndpoint}:aud": "sts.amazonaws.com"
                },
                "StringLike": {
                  "${OIDCProviderEndpoint}:sub": "system:serviceaccount:kube-system:cluster-autoscaler-*"
                }
              }
            }
          ]
        }
      ManagedPolicyArns:
        - !Sub arn:${AWS::Partition}:iam::aws:policy/AmazonElasticContainerRegistryPublicReadOnly
      Policies:
      # https://docs.aws.amazon.com/eks/latest/userguide/autoscaling.html#cluster-autoscaler
        - PolicyName: AmazonEKSClusterAutoscalerPolicy
          PolicyDocument: !Sub |
            {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "autoscaling:DescribeAutoScalingGroups",
                    "autoscaling:DescribeAutoScalingInstances",
                    "autoscaling:DescribeLaunchConfigurations",
                    "autoscaling:DescribeTags",
                    "ec2:DescribeImages",
                    "ec2:DescribeInstanceTypes",
                    "ec2:DescribeLaunchTemplateVersions",
                    "ec2:GetInstanceTypesFromInstanceRequirements"
                  ],
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "autoscaling:SetDesiredCapacity",
                    "autoscaling:TerminateInstanceInAutoScalingGroup"
                  ],
                  "Resource": "arn:${AWS::Partition}:autoscaling:${AWS::Region}:${AWS::AccountId}:autoScalingGroup:*:autoScalingGroupName/*",
                  "Condition": {
                    "StringEquals": {
                      "autoscaling:ResourceTag/k8s.io/cluster-autoscaler/enabled": "true",
                      "aws:ResourceTag/k8s.io/cluster-autoscaler/${EksClusterName}": "owned"
                    }
                  }
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "eks:DescribeNodegroup"
                  ],
                  "Resource": "arn:${AWS::Partition}:eks:${AWS::Region}:${AWS::AccountId}:nodegroup/*/*/*"
                }
              ]
            }
  ClusterAutoScalerHelmChart:
    # https://docs.aws.amazon.com/eks/latest/userguide/autoscaling.html#cluster-autoscaler
    Type: AWSQS::Kubernetes::Helm
    Properties:
      ClusterID: !Ref EksClusterName
      Namespace: kube-system
      Chart: cluster-autoscaler/cluster-autoscaler
      Repository: https://kubernetes.github.io/autoscaler
      Values:
        awsRegion: !Ref AWS::Region
        autoDiscovery.clusterName: !Ref EksClusterName
        cloudProvider: aws
        extraArgs.aws-use-static-instance-list: !If [NeedsStaticList, true, !Ref AWS::NoValue]
        extraArgs.balance-similar-node-groups: false
        extraArgs.expander: random
        image.tag: !FindInMap [KubernetesVersion, !Ref KubernetesVersion, ImageTag]
        nodeSelector.kubernetes\.io/os: linux
        prometheusRule.enabled: !Ref PrometheusEnabled
        prometheusRule.namespace: !Ref PrometheusNamespace
        rbac.serviceAccount.annotations.eks\.amazonaws\.com/role-arn: !GetAtt ClusterAutoScalerIamRole.Arn
