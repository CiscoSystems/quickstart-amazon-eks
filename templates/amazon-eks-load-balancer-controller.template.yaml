AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Deploys the aws load balancer controller to an existing kubernetes cluster
  (qs-1qnl6p00n).
Metadata:
  QSLint:
    Exclusions: [W9002, W9003, W9004, W9006]
Parameters:
  OIDCProviderArn:
    Type: String
  OIDCProviderEndpoint:
    Type: String
  EksClusterName:
    Type: String
  VpcId:
    Type: String
  ControllerCPULimit:
    Type: String
    Default: 100m
  ControllerMemoryLimit:
    Type: String
    Default: 80Mi
  ControllerReplicaCount:
    Type: Number
    Default: 1
  ControllerHostNetwork:
    Type: String
    AllowedValues: [Enabled, Disabled]
    Default: Disabled
Conditions:
  HostNetworkEnabled: !Equals [!Ref ControllerHostNetwork, Enabled]
Resources:
  LoadBalancerControllerIAMRole:
    Type: AWS::IAM::Role
    Metadata:
      cfn-lint:
        config:
          ignore_checks: [EIAMPolicyWildcardResource]
          ignore_reasons:
            EIAMPolicyWildcardResource: >-
              Resources are created dynamically by the k8s cloud controller,
              and aren't known at the time of policy creation.
    Properties:
      AssumeRolePolicyDocument: !Sub |
        {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Federated": "${OIDCProviderArn}"
              },
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": {
                "StringEquals": {
                  "${OIDCProviderEndpoint}:aud": "sts.amazonaws.com",
                  "${OIDCProviderEndpoint}:sub": "system:serviceaccount:kube-system:aws-load-balancer-controller"
                }
              }
            }
          ]
        }
      Policies:
        - PolicyName: load-balancer-controller-policy
          # https://raw.githubusercontent.com/kubernetes-sigs/aws-alb-ingress-controller/main/docs/install/iam_policy.json
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - iam:CreateServiceLinkedRole
                Resource: '*'
                Condition:
                  StringEquals:
                    iam:AWSServiceName: elasticloadbalancing.amazonaws.com
              - Effect: Allow
                Action:
                  - ec2:DescribeAccountAttributes
                  - ec2:DescribeAddresses
                  - ec2:DescribeAvailabilityZones
                  - ec2:DescribeInternetGateways
                  - ec2:DescribeVpcs
                  - ec2:DescribeVpcPeeringConnections
                  - ec2:DescribeSubnets
                  - ec2:DescribeSecurityGroups
                  - ec2:DescribeInstances
                  - ec2:DescribeNetworkInterfaces
                  - ec2:DescribeTags
                  - ec2:GetCoipPoolUsage
                  - ec2:DescribeCoipPools
                  - elasticloadbalancing:DescribeLoadBalancers
                  - elasticloadbalancing:DescribeLoadBalancerAttributes
                  - elasticloadbalancing:DescribeListeners
                  - elasticloadbalancing:DescribeListenerCertificates
                  - elasticloadbalancing:DescribeSSLPolicies
                  - elasticloadbalancing:DescribeRules
                  - elasticloadbalancing:DescribeTargetGroups
                  - elasticloadbalancing:DescribeTargetGroupAttributes
                  - elasticloadbalancing:DescribeTargetHealth
                  - elasticloadbalancing:DescribeTags
                Resource: '*'
              - Effect: Allow
                Action:
                  - cognito-idp:DescribeUserPoolClient
                  - acm:ListCertificates
                  - acm:DescribeCertificate
                  - iam:ListServerCertificates
                  - iam:GetServerCertificate
                  - waf-regional:GetWebACL
                  - waf-regional:GetWebACLForResource
                  - waf-regional:AssociateWebACL
                  - waf-regional:DisassociateWebACL
                  - wafv2:GetWebACL
                  - wafv2:GetWebACLForResource
                  - wafv2:AssociateWebACL
                  - wafv2:DisassociateWebACL
                  - shield:GetSubscriptionState
                  - shield:DescribeProtection
                  - shield:CreateProtection
                  - shield:DeleteProtection
                Resource: '*'
              - Effect: Allow
                Action:
                  - ec2:AuthorizeSecurityGroupIngress
                  - ec2:RevokeSecurityGroupIngress
                Resource: '*'
              - Effect: Allow
                Action:
                  - ec2:CreateSecurityGroup
                Resource: '*'
              - Effect: Allow
                Action:
                  - ec2:CreateTags
                Resource: !Sub arn:${AWS::Partition}:ec2:*:*:security-group/*
                Condition:
                  StringEquals:
                    ec2:CreateAction: CreateSecurityGroup
                  'Null':
                    aws:RequestTag/elbv2.k8s.aws/cluster: 'false'
              - Effect: Allow
                Action:
                  - ec2:CreateTags
                  - ec2:DeleteTags
                Resource: !Sub arn:${AWS::Partition}:ec2:*:*:security-group/*
                Condition:
                  'Null':
                    aws:RequestTag/elbv2.k8s.aws/cluster: 'true'
                    aws:ResourceTag/elbv2.k8s.aws/cluster: 'false'
              - Effect: Allow
                Action:
                  - ec2:AuthorizeSecurityGroupIngress
                  - ec2:RevokeSecurityGroupIngress
                  - ec2:DeleteSecurityGroup
                Resource: '*'
                Condition:
                  'Null':
                    aws:ResourceTag/elbv2.k8s.aws/cluster: 'false'
              - Effect: Allow
                Action:
                  - elasticloadbalancing:CreateLoadBalancer
                  - elasticloadbalancing:CreateTargetGroup
                Resource: '*'
                Condition:
                  'Null':
                    aws:RequestTag/elbv2.k8s.aws/cluster: 'false'
              - Effect: Allow
                Action:
                  - elasticloadbalancing:CreateListener
                  - elasticloadbalancing:DeleteListener
                  - elasticloadbalancing:CreateRule
                  - elasticloadbalancing:DeleteRule
                Resource: '*'
              - Effect: Allow
                Action:
                  - elasticloadbalancing:AddTags
                  - elasticloadbalancing:RemoveTags
                Resource:
                  - !Sub arn:${AWS::Partition}:elasticloadbalancing:*:*:targetgroup/*/*
                  - !Sub arn:${AWS::Partition}:elasticloadbalancing:*:*:loadbalancer/net/*/*
                  - !Sub arn:${AWS::Partition}:elasticloadbalancing:*:*:loadbalancer/app/*/*
                Condition:
                  'Null':
                    aws:RequestTag/elbv2.k8s.aws/cluster: 'true'
                    aws:ResourceTag/elbv2.k8s.aws/cluster: 'false'
              - Effect: Allow
                Action:
                  - elasticloadbalancing:AddTags
                  - elasticloadbalancing:RemoveTags
                Resource:
                  - !Sub arn:${AWS::Partition}:elasticloadbalancing:*:*:listener/net/*/*/*
                  - !Sub arn:${AWS::Partition}:elasticloadbalancing:*:*:listener/app/*/*/*
                  - !Sub arn:${AWS::Partition}:elasticloadbalancing:*:*:listener-rule/net/*/*/*
                  - !Sub arn:${AWS::Partition}:elasticloadbalancing:*:*:listener-rule/app/*/*/*
              - Effect: Allow
                Action:
                  - elasticloadbalancing:ModifyLoadBalancerAttributes
                  - elasticloadbalancing:SetIpAddressType
                  - elasticloadbalancing:SetSecurityGroups
                  - elasticloadbalancing:SetSubnets
                  - elasticloadbalancing:DeleteLoadBalancer
                  - elasticloadbalancing:ModifyTargetGroup
                  - elasticloadbalancing:ModifyTargetGroupAttributes
                  - elasticloadbalancing:DeleteTargetGroup
                Resource: '*'
                Condition:
                  'Null':
                    aws:ResourceTag/elbv2.k8s.aws/cluster: 'false'
              - Effect: Allow
                Action:
                  - elasticloadbalancing:RegisterTargets
                  - elasticloadbalancing:DeregisterTargets
                Resource: !Sub arn:${AWS::Partition}:elasticloadbalancing:*:*:targetgroup/*/*
              - Effect: Allow
                Action:
                  - elasticloadbalancing:SetWebAcl
                  - elasticloadbalancing:ModifyListener
                  - elasticloadbalancing:AddListenerCertificates
                  - elasticloadbalancing:RemoveListenerCertificates
                  - elasticloadbalancing:ModifyRule
                Resource: '*'
  LoadBalancerControllerHelmChart:
  # https://artifacthub.io/packages/helm/aws/aws-load-balancer-controller
    Type: AWSQS::Kubernetes::Helm
    Properties:
      ClusterID: !Ref EksClusterName
      Namespace: kube-system
      Name: aws-load-balancer-controller
      Repository: https://aws.github.io/eks-charts
      Chart: eks/aws-load-balancer-controller
      Values:
        clusterName: !Ref EksClusterName
        region: !Ref AWS::Region
        resources.limits.cpu: !Ref ControllerCPULimit
        resources.limits.memory: !Ref ControllerMemoryLimit
        replicaCount: !Ref ControllerReplicaCount
        hostNetwork: !If [HostNetworkEnabled, 'true', 'false']
        vpcId: !Ref VpcId
      ValueYaml: !Sub |
        serviceAccount:
          annotations:
            eks.amazonaws.com/role-arn: ${LoadBalancerControllerIAMRole.Arn}
        nodeSelector:
          kubernetes.io/os: linux
Outputs:
  LoadBalancerControllerHelmChart:
    Value: !Ref LoadBalancerControllerHelmChart
